<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE config SYSTEM "./dtd/config_v1.dtd">

<config>

	<module name="network">
		<param name="inputNetworkFile" value="input/Siouxfalls_network_PT.xml" />
	</module>

	<module name="plans">
		<param name="inputPlansFile" value="input/Siouxfalls_population.xml.gz" />
	</module>
	
	<module name="scenario">
	  	<param name="useTransit" value="false" />
 		<param name="useVehicles" value="false" />
	</module>

	<module name="controler">
		<param name="writeEventsInterval" value="1000" />
		<param name="writePlansInterval" value="1000" />
		<param name="eventsFileFormat" value="xml" />
		<param name="outputDirectory" value="matsim"/>
		<param name="firstIteration" value="0" />
		<param name="lastIteration" value="0" />
		<param name="mobsim" value="qsim" />
	</module>
 	
 	<module name="qsim" >
		<param name="startTime" value="07:11:01" />
		<param name="endTime" value="07:59:21" />
		<param name="flowCapacityFactor" value="1.00" />
		<param name="storageCapacityFactor" value="1.00" />
		<param name="numberOfThreads" value="1" />
		<param name = "snapshotperiod"	value = "00:00:01"/>
		<param name = "simStarttimeInterpretation"	value = "onlyUseStarttime"/>

		<!-- Boolean. `true': stuck vehicles are removed, aborting the plan; `false': stuck vehicles are forced into the next link. `false' is probably the better choice. -->
		<param name="removeStuckVehicles" value="false" />

		<!-- time in seconds.  Time after which the frontmost vehicle on a link is called `stuck' if it does not move. -->
		<param name="stuckTime" value="3600.0" />
		<param name="timeStepSize" value="00:00:01" />

		<!-- `queue' for the standard queue model, `withHolesExperimental' (experimental!!) for the queue model with holes -->
		<param name="trafficDynamics" value="queue" />
		
	</module>
	
	
</config>
